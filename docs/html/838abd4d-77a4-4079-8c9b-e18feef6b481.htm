<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Genetica.NET</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="Welcome" /><meta name="Microsoft.Help.Id" content="838abd4d-77a4-4079-8c9b-e18feef6b481" /><meta name="Description" content="A genetic programming library written in C#" /><meta name="Microsoft.Help.ContentType" content="Concepts" /><meta name="BrandingAware" content="true" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Genetica.NET - A genetic programming library written in C#<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html\838abd4d-77a4-4079-8c9b-e18feef6b481.htm" title="Genetica.NET - A genetic programming library written in C#" tocid="roottoc">Genetica.NET - A genetic programming library written in C#</a></div><div class="toclevel1 current" data-toclevel="1"><a data-tochassubtree="false" href="../html/838abd4d-77a4-4079-8c9b-e18feef6b481.htm" title="Genetica.NET" tocid="838abd4d-77a4-4079-8c9b-e18feef6b481">Genetica.NET</a></div><div class="toclevel1" data-toclevel="1"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_Genetica.htm" title="Genetica" tocid="N_Genetica">Genetica</a></div><div class="toclevel1" data-toclevel="1"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_Genetica_D3.htm" title="Genetica.D3" tocid="N_Genetica_D3">Genetica.D3</a></div><div class="toclevel1" data-toclevel="1"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_Genetica_Elements.htm" title="Genetica.Elements" tocid="N_Genetica_Elements">Genetica.Elements</a></div><div class="toclevel1" data-toclevel="1"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_Genetica_Elements_Functions.htm" title="Genetica.Elements.Functions" tocid="N_Genetica_Elements_Functions">Genetica.Elements.Functions</a></div><div class="toclevel1" data-toclevel="1"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_Genetica_Elements_Terminals.htm" title="Genetica.Elements.Terminals" tocid="N_Genetica_Elements_Terminals">Genetica.Elements.Terminals</a></div><div class="toclevel1" data-toclevel="1"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_Genetica_Evaluation.htm" title="Genetica.Evaluation" tocid="N_Genetica_Evaluation">Genetica.Evaluation</a></div><div class="toclevel1" data-toclevel="1"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_Genetica_Graphviz.htm" title="Genetica.Graphviz" tocid="N_Genetica_Graphviz">Genetica.Graphviz</a></div><div class="toclevel1" data-toclevel="1"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_Genetica_Operators_Crossover.htm" title="Genetica.Operators.Crossover" tocid="N_Genetica_Operators_Crossover">Genetica.Operators.Crossover</a></div><div class="toclevel1" data-toclevel="1"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_Genetica_Operators_Generation.htm" title="Genetica.Operators.Generation" tocid="N_Genetica_Operators_Generation">Genetica.Operators.Generation</a></div><div class="toclevel1" data-toclevel="1"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_Genetica_Operators_Mutation.htm" title="Genetica.Operators.Mutation" tocid="N_Genetica_Operators_Mutation">Genetica.Operators.Mutation</a></div><div class="toclevel1" data-toclevel="1"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_Genetica_Operators_Selection.htm" title="Genetica.Operators.Selection" tocid="N_Genetica_Operators_Selection">Genetica.Operators.Selection</a></div><div class="toclevel1" data-toclevel="1"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_Genetica_Similarity.htm" title="Genetica.Similarity" tocid="N_Genetica_Similarity">Genetica.Similarity</a></div><div class="toclevel1" data-toclevel="1"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_Genetica_Trees.htm" title="Genetica.Trees" tocid="N_Genetica_Trees">Genetica.Trees</a></div><div class="toclevel1" data-toclevel="1"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_Genetica_Util.htm" title="Genetica.Util" tocid="N_Genetica_Util">Genetica.Util</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td colspan="2" class="logoColumnAbove" align="left"><img src="../icons/genetica-128.png" /></td></tr><tr><td class="titleColumn"><h1>Genetica.NET</h1></td></tr></table><span class="introStyle"></span> <div class="introduction"><blockquote><p>A genetic programming library written in C#</p></blockquote><p>
        Genetica is a .NET open-source <em>genetic programming</em> (GP) library written entirely in C#. In general terms, GP allows a population of <em>candidate programs</em> to change over time by means of operators inspired from natural evolution such as <em>selection</em>, <em>mutation</em> and <em>crossover</em>. The evolutionary process is guided by a <em>fitness function</em> that assesses how fit a program is (usually its output) in regard to some external objective function.
      </p><p>
        Currently, Genetica.NET supports the evolution of programs representing <em>mathematical expressions</em> in a syntactic tree form. Mathematical programs combine <em>primitives</em> taken from a set of <em>terminals</em>, representing input scalar values, and several mathematical <em>functions</em>.
      </p><p>
        Genetica.NET is open-source under the <a href="https://github.com/pedrodbs/Genetica/blob/master/LICENSE.md" target="_blank">MIT license</a> and is free for commercial use.
      </p><ul><li>
          Source repository: <a href="https://github.com/pedrodbs/Genetica" target="_blank">https://github.com/pedrodbs/Genetica</a>/
        </li><li>
          Issue tracker: <a href="https://github.com/pedrodbs/Genetica/issues" target="_blank">https://github.com/pedrodbs/Genetica/issues</a></li></ul><p>Supported platforms:</p><ul><li>.Net 4.5+ on Windows, Linux and Mac</li></ul></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Packages and Dependencies</span></div><div id="ID0RBSection" class="collapsibleSection"><p>The following packages with the corresponding dependencies are provided:</p><ul><li><p><strong>Genetica:</strong> core package, including mathematical programs support and all GP operators. </p><ul><li><a href="https://nuget.org/profiles/mathnet/" target="_blank">Math.NET Numerics</a></li></ul></li><li><p><strong>Genetica.D3:</strong> package to export tree-based programs to json files to be visualized with d3.js. </p><ul><li><a href="https://www.nuget.org/packages/Newtonsoft.Json/" target="_blank">Json.NET</a></li></ul></li><li><p><strong>Genetica.Graphviz:</strong> package to create tree (DAG) representations for tree-based programs and export them to image files via <a href="https://www.graphviz.org/" target="_blank">Graphviz</a>.</p><ul><li><a href="https://github.com/pedrodbs/quickgraph" target="_blank">QuickGraph</a> (forked to allow colored edges and vertexes when exporting to Graphviz dot format)</li></ul></li></ul></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Installation</span></div><div id="ID1RBSection" class="collapsibleSection"><p>Currently, you can <em>git clone</em> the Genetica.NET <a href="https://github.com/pedrodbs/genetica" target="_blank">source code</a> and use an IDE like VisualStudio to build the corresponding binaries. NuGet deployment is planned in the future.</p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Getting started</span></div><div id="ID3RBSection" class="collapsibleSection"><p>Start by creating the <em>fitness function</em> to evaluate and compare your programs:</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID2EAIAEAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID2EAIAEAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID2EAIAEAAA');return false;" title="Copy">Copy</a></div></div><div id="ID2EAIAEAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">class</span> FitnessFunction : IFitnessFunction&lt;MathProgram&gt;{...}
<span class="highlight-keyword">var</span> fitnessFunction = <span class="highlight-keyword">new</span> FitnessFunction();</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID2EAIAEAAA");</script><p>Define the <em>primitive set</em>:</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID2EAGAEAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID2EAGAEAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID2EAGAEAAA');return false;" title="Copy">Copy</a></div></div><div id="ID2EAGAEAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">var</span> variable = <span class="highlight-keyword">new</span> Variable(<span class="highlight-literal">"x"</span>);
<span class="highlight-keyword">var</span> primitives = <span class="highlight-keyword">new</span> PrimitiveSet&lt;MathProgram&gt;(
    <span class="highlight-keyword">new</span> List&lt;MathProgram&gt; {variable, <span class="highlight-keyword">new</span> Constant(<span class="highlight-number">0</span>), ...},
    MathPrimitiveSets.Default.Functions);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID2EAGAEAAA");</script><p>Create and initiate a <em>population</em> of candidate programs:</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID2EAEAEAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID2EAEAEAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID2EAEAEAAA');return false;" title="Copy">Copy</a></div></div><div id="ID2EAEAEAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">var</span> population = <span class="highlight-keyword">new</span> Population&lt;MathProgram, <span class="highlight-keyword">double</span>&gt;(
    <span class="highlight-number">100</span>, 
    primitives,
    <span class="highlight-keyword">new</span> GrowProgramGenerator&lt;MathProgram, <span class="highlight-keyword">double</span>&gt;(), 
    fitnessFunction,
    <span class="highlight-keyword">new</span> TournamentSelection&lt;MathProgram&gt;(fitnessFunction, <span class="highlight-number">10</span>),
    <span class="highlight-keyword">new</span> SubtreeCrossover&lt;MathProgram, <span class="highlight-keyword">double</span>&gt;(),
    <span class="highlight-keyword">new</span> PointMutation&lt;MathProgram, <span class="highlight-keyword">double</span>&gt;(primitives), 
    ...);
population.Init(<span class="highlight-keyword">new</span> HashSet&lt;MathProgram&gt; {...});</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID2EAEAEAAA");</script><p><em>Step</em> the population for some number of generations:</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID2EACAEAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID2EACAEAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID2EACAEAAA');return false;" title="Copy">Copy</a></div></div><div id="ID2EACAEAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">for</span> (<span class="highlight-keyword">var</span> i = <span class="highlight-number">0</span>; i &lt; <span class="highlight-number">500</span>; i++)
    population.Step();</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID2EACAEAAA");</script><p>Get the <em>solution</em> program, <em>i.e.</em>, the one attaining the highest fitness:</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID2EAAAEAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID2EAAAEAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID2EAAAEAAA');return false;" title="Copy">Copy</a></div></div><div id="ID2EAAAEAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">var</span> solution = population.BestProgram;</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID2EAAAEAAA");</script></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Features</span></div><div id="ID4RBSection" class="collapsibleSection"><ul><li><p>Creation of programs as <em>mathematical expressions</em></p><ul><li><strong>Terminals:</strong> constant and variables</li><li><strong>Functions:</strong> arithmetic functions, sine, cosine, min, max, log, exponentiation and 'if' conditional operator</li></ul></li><li><p><em>Genetic operators</em></p><ul><li><strong>Selection:</strong> tournament, roulette wheel (even and uneven selectors), stochastic</li><li><strong>Crossover:</strong> uniform, one-point, sub-tree, context-preserving, stochastic</li><li><strong>Mutation:</strong> point, sub-tree, hoist, shrink, swap, simplify, fitness simplify, stochastic</li><li><strong>Generation:</strong> full-depth, grow, stochastic</li></ul></li><li><p>Population class implementing a standard steady-state <em>GP evolutionary procedure</em></p></li><li><p>Rank (linear and non-linear) <em>fitness functions</em></p></li><li><p>Measure the <em>similarity</em> between two programs</p><ul><li><strong>Similarity measures:</strong> value (according to the range of variables), primitive, leaf, sub-program, sub-combination, prefix and normal notation expression edit, tree edit, common region, average</li></ul></li><li><p><em>Conversion</em> of programs to/from strings</p><ul><li><p><em>Normal</em> notation, <em>e.g.</em>: </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID2EAABACBADAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID2EAABACBADAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID2EAABACBADAAA');return false;" title="Copy">Copy</a></div></div><div id="ID2EAABACBADAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">var</span> converter = <span class="highlight-keyword">new</span> MathExpressionConverter(MathPrimitiveSets.Default);
<span class="highlight-keyword">var</span> program = converter.FromNormalNotation(<span class="highlight-literal">"min(3,(2-1))"</span>);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID2EAABACBADAAA");</script></li><li><p><em>Prefix</em> notation, <em>e.g.</em>:</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID2EAAAACBADAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID2EAAAACBADAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID2EAAAACBADAAA');return false;" title="Copy">Copy</a></div></div><div id="ID2EAAAACBADAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">var</span> program = converter.FromPrefixNotation(<span class="highlight-literal">"(min 3 (- 2 1))"</span>);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID2EAAAACBADAAA");</script></li></ul></li><li><p>Program <em>simplification</em> to remove redundancies and evolutionary noise, <em>e.g.</em>:</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID2EAABBADAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID2EAABBADAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID2EAABBADAAA');return false;" title="Copy">Copy</a></div></div><div id="ID2EAABBADAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">converter.FromNormalNotation(<span class="highlight-literal">"min((x*0),(3-2))"</span>).Simplify(); <span class="highlight-comment">// -&gt; 1</span>
converter.FromNormalNotation(<span class="highlight-literal">"(x+(x+(x+x)))"</span>).Simplify(); <span class="highlight-comment">// -&gt; (x*4)</span>
converter.FromNormalNotation(<span class="highlight-literal">"(2+((x*x)*x))"</span>).Simplify(); <span class="highlight-comment">// -&gt; ((x^3)+2)</span>
converter.FromNormalNotation(<span class="highlight-literal">"(0?1:log(3,(1+0)):max(3,(cos(0)-(3/1))))"</span>).Simplify(); <span class="highlight-comment">// -&gt; 1</span>
converter.FromNormalNotation(<span class="highlight-literal">"((x*0)?(x-0):log(3,0):max(3,1))"</span>).Simplify(); <span class="highlight-comment">// -&gt; x</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID2EAABBADAAA");</script></li><li><p><em>Visual instruments</em> (trees) to analyze the structure of sets of programs (<em>e.g.</em>, a population):</p><ul><li>Information, symbol, ordered symbol, sub-program</li></ul></li></ul><ul><li><p><strong>Graphviz export</strong></p><ul><li><p>Export a program's tree representation to image file with <a href="https://www.graphviz.org/" target="_blank">Graphviz</a> (requires Graphviz installed and <em>dot</em> binary accessible from the system's path), <em>e.g.</em>:</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID2EACAAAAADAAA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID2EACAAAAADAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID2EACAAAAADAAA');return false;" title="Copy">Copy</a></div></div><div id="ID2EACAAAAADAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">using</span> Genetica.Graphviz;
<span class="highlight-keyword">using</span> QuickGraph.Graphviz.Dot;
...
<span class="highlight-keyword">var</span> program = converter.FromNormalNotation(<span class="highlight-literal">"(log((1/x),cos((x-1)))+(2?1:max(x,1):3))"</span>);
program.ToGraphvizFile(<span class="highlight-literal">"."</span>, <span class="highlight-literal">"file"</span>, GraphvizImageType.Png);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID2EACAAAAADAAA");</script><p>would produce the following image:</p><p><div class="mediaNear"><img alt="program" src="../media/program.png" /></div></p></li></ul></li></ul></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID5RBSection" class="collapsibleSection"><p>Example code can be found in the <a href="https://github.com/pedrodbs/Genetica/tree/master/src/Examples" target="_blank">src/Examples</a> folder in the <a href="https://github.com/pedrodbs/Genetica" target="_blank">repository</a>.</p><ul><li><strong>FunctionRegression:</strong> an example of performing symbolic regression to search the space of mathematical expressions and find the program that best fits a given set of points generated by some function (unknown to the algorithm). Programs are evaluated both in terms of accuracy (lower RMSE between actual and predicted output) and simplicity (shorter expressions are better).</li><li><strong>ProgramVisualizer:</strong> a Windows.Forms application that allows visualizing programs converted from a user-input expression written in normal or prefix notation. It also shows characteristics of the program such as its length, depth, or sub-programs. Allows exporting the current program to an image file via Graphviz.</li></ul></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID6RB')" onkeypress="SectionExpandCollapse_CheckKey('ID6RB', event)" tabindex="0"><img id="ID6RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID6RBSection" class="collapsibleSection"><p><strong>References</strong></p><ol><li>McPhee, N. F., Poli, R., &amp; Langdon, W. B. (2008). <a href="http://digitalcommons.morris.umn.edu/cgi/viewcontent.cgi?article=1001&amp;context=cs_facpubs" target="_blank">Field guide to genetic programming</a>. </li><li>Koza, J. R. (1994). <a href="https://doi.org/10.1007/BF00175355" target="_blank">Genetic programming as a means for programming computers by natural selection</a>. <em>Statistics and computing</em>, <em>4</em>(2), 87-112.</li><li>Pohlheim, H. (1995). <em><a href="%20http://www.pohlheim.com/Papers/mpga_gal95/gal2_3.html" target="_blank">The multipopulation genetic algorithm: Local selection and migration</a></em>. Technical report, Technical University Ilmenau.</li></ol><p><strong>Other links</strong></p><ul><li><a href="https://en.wikipedia.org/wiki/Genetic_programming" target="_blank">Genetic programming (Wikipedia)</a></li><li><a href="https://www.graphviz.org/" target="_blank">Graphviz</a></li><li><a href="https://d3js.org/" target="_blank">D3.js</a></li><li><a href="http://www.geatbx.com/docu/algindex-02.html#P249_16387" target="_blank">http://www.geatbx.com/docu/algindex-02.html#P249_16387</a></li></ul><p>Copyright © 2018, <a href="https://github.com/pedrodbs" target="_blank">Pedro Sequeira</a></p></div></div></div><div id="pageFooter" class="pageFooter"><p>Copyright (c) 2018 Pedro Sequeira</p></div></body></html>